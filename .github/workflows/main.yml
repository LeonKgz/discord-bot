# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted
    environment: mankurt
    env:
      ME: "384492518043287555"
      DISCORD_TOKEN: "NzI1NzEyNDU3NTQ0MzY4MTg4.XvSuZA.wnLNf4oV0REA3YIHDI_3cYQzVhU"
      TEST_USER_TOKEN: "OTg3ODU3NjM3MzYwMTQ0Mzk0.GZDPxs._YPaV8MCZeGq22nDd2nsAgLyJ2S_SWrH4CkiRM"
      DISCORD_GUILD: "703737790848040971"
      SENECA_API_TOKEN: "5341436760:AAEg3XVn5cRVFNSQUjOg2jrhThF8TJZ5gr8"
      DB_USER: "root"
      DB_PASSWORD: "SenecaPraemeditatio1874"
      DB_HOST: "45.32.178.186"
      DB_DATABASE: "a8nf9cctdcnbl7xz"    
      QUOTES_KEY: ${{ secrets.QUOTES_KEY }}
      FOOD_KEY: ${{ secrets.FOOD_KEY }}
      MANASCHI: "940320239344824320"
      TEST_DB_DATABASE: "zanshin_db"
      TEST_DISCORD_GUILD: "987868240376102932"
      TEST_CHANNEL: "987868241235939352"
      TEST_TARGET: "725712457544368188"
      TEST_USER: "987857637360144394"
    strategy:
      matrix:
        python-version: [3.7]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: Running the Tester Bot
        run: | 
          docker stop zanshin_discord_bot || true
          docker build -t zanshin --file Dockerfile_Test .
          docker run --env DISCORD_TOKEN=$DISCORD_TOKEN --env ME=$ME --env DISCORD_GUILD=$DISCORD_GUILD --env SENECA_API_TOKEN=$SENECA_API_TOKEN --env DB_USER=$DB_USER --env DB_PASSWORD=$DB_PASSWORD --env DB_HOST=$DB_HOST --env DB_DATABASE=$DB_DATABASE --env QUOTES_KEY=$QUOTES_KEY --env FOOD_KEY=$FOOD_KEY --env MANASCHI=$MANASCHI --env TEST_DB_DATABASE=$TEST_DB_DATABASE --env TEST_DISCORD_GUILD=$TEST_DISCORD_GUILD --env TEST_CHANNEL=$TEST_CHANNEL --env TEST_TARGET=$TEST_TARGET --env TEST_USER=$TEST_USER -d --name zanshin_discord_bot zanshin 
          
      - name: Running Tests
        run: |
          python3 example_tester.py -c $TEST_CHANNEL --run all $TEST_TARGET $TEST_USER_TOKEN
#          docker container prune --force
#          docker build -t zanshin_runner --file Dockerfile_Tester .
#          docker run --env TEST_USER_TOKEN=$TEST_USER_TOKEN --env DISCORD_TOKEN=$DISCORD_TOKEN --env ME=$ME --env DISCORD_GUILD=$DISCORD_GUILD --env SENECA_API_TOKEN=$SENECA_API_TOKEN --env DB_USER=$DB_USER --env DB_PASSWORD=$DB_PASSWORD --env DB_HOST=$DB_HOST --env DB_DATABASE=$DB_DATABASE --env QUOTES_KEY=$QUOTES_KEY --env FOOD_KEY=$FOOD_KEY --env MANASCHI=$MANASCHI --env TEST_DB_DATABASE=$TEST_DB_DATABASE --env TEST_DISCORD_GUILD=$TEST_DISCORD_GUILD --env TEST_CHANNEL=$TEST_CHANNEL --env TEST_TARGET=$TEST_TARGET --env TEST_USER=$TEST_USER --name zanshin_runner zanshin_runner 
#           python3 example_tester.py -c $TEST_CHANNEL --run all $TEST_TARGET OTg3ODU3NjM3MzYwMTQ0Mzk0.GZDPxs._YPaV8MCZeGq22nDd2nsAgLyJ2S_SWrH4CkiRM          
      - name: Stopping the Tester Bot and the Runner container
        run: |
          docker stop zanshin_discord_bot
#          docker stop zanshin_runner
          
      # Runs a single command using the runners shell
      - name: Running The Bot
        run: | 
          docker build -t mankurt .
          docker stop mankurt_discord_bot
          docker container prune --force 
          docker run --env DISCORD_TOKEN=$DISCORD_TOKEN --env ME=$ME --env DISCORD_GUILD=$DISCORD_GUILD --env SENECA_API_TOKEN=$SENECA_API_TOKEN --env DB_USER=$DB_USER --env DB_PASSWORD=$DB_PASSWORD --env DB_HOST=$DB_HOST --env DB_DATABASE=$DB_DATABASE --env QUOTES_KEY=$QUOTES_KEY --env FOOD_KEY=$FOOD_KEY --env MANASCHI=$MANASCHI --env TEST_DB_DATABASE=$TEST_DB_DATABASE --env TEST_DISCORD_GUILD=$TEST_DISCORD_GUILD --env TEST_CHANNEL=$TEST_CHANNEL --env TEST_TARGET=$TEST_TARGET --env TEST_USER=$TEST_USER -d --name mankurt_discord_bot mankurt 
          
