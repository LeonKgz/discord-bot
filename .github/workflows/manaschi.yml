# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    paths:
      - 'manaschi.py'
      - 'voice.py'
      - 'env.py'
      - 'manaschi.yml'
      - 'Dockerfile_Manaschi'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted
    environment: mankurt
    env:
      KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      
    strategy:
      matrix:
        python-version: [3.7]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: Retrieving Environment Variables
        run: |
          echo "$KEYSTORE_BASE64"==== | fold -w 4 | sed '$ d' | tr -d '\n' | base64 --decode > my_production.keystore

      # Runs a single command using the runners shell
      - name: Running The Bot
        run: | 
          docker build -t manaschi --file Dockerfile_Manaschi .
          docker rm -fv manaschi_discord_bot 
          docker container prune --force
          docker run --env-file my_production.keystore -d --name manaschi_discord_bot manaschi 
          
      - name: Clean Up Containers
        continue-on-error: true
        run: |
          docker rm -fv $(docker ps --filter=status=exited --filter=status=dead -q)
          
      - name: Clean Up Images
        continue-on-error: true
        run: |
          docker rmi $(docker images --filter dangling=true -q)          
          
